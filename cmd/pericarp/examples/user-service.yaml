openapi: 3.0.0
info:
  title: User Service API
  version: 1.0.0
  description: A comprehensive user management service demonstrating complex entity relationships
paths: {}
components:
  schemas:
    User:
      type: object
      required:
        - email
        - name
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the user
        email:
          type: string
          format: email
          minLength: 5
          maxLength: 100
          description: User's email address
        name:
          type: string
          minLength: 1
          maxLength: 50
          description: User's full name
        age:
          type: integer
          minimum: 0
          maximum: 150
          description: User's age in years
        isActive:
          type: boolean
          default: true
          description: Whether the user account is active
        profile:
          $ref: '#/components/schemas/Profile'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        preferences:
          type: object
          properties:
            theme:
              type: string
              enum: [light, dark]
            notifications:
              type: boolean
              default: true
    Profile:
      type: object
      required:
        - bio
      properties:
        bio:
          type: string
          maxLength: 500
          description: User's biography
        website:
          type: string
          format: uri
          description: User's personal website
        avatar:
          type: string
          format: uri
          description: URL to user's avatar image
        createdAt:
          type: string
          format: date-time
          description: When the profile was created
        socialLinks:
          type: array
          items:
            type: string
            format: uri
    Address:
      type: object
      required:
        - street
        - city
        - country
      properties:
        id:
          type: string
          format: uuid
        street:
          type: string
          minLength: 1
          maxLength: 200
        city:
          type: string
          minLength: 1
          maxLength: 100
        state:
          type: string
          maxLength: 100
        postalCode:
          type: string
          pattern: "^[0-9]{5}(-[0-9]{4})?$"
        country:
          type: string
          minLength: 2
          maxLength: 2
          pattern: "^[A-Z]{2}$"
        isPrimary:
          type: boolean
          default: false