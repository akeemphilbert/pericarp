syntax = "proto3";

package simple;

option go_package = "github.com/example/simple/pb";

// Product represents a simple product in an e-commerce system
message Product {
  // Unique identifier for the product
  string id = 1;
  
  // Product name (required)
  string name = 2;
  
  // Product description
  string description = 3;
  
  // Product price in cents (to avoid floating point issues)
  int64 price_cents = 4;
  
  // Whether the product is in stock
  bool in_stock = 5;
  
  // Product category
  ProductCategory category = 6;
  
  // Product creation timestamp
  int64 created_at = 7;
}

// ProductCategory enum for product categories
enum ProductCategory {
  PRODUCT_CATEGORY_UNSPECIFIED = 0;
  PRODUCT_CATEGORY_ELECTRONICS = 1;
  PRODUCT_CATEGORY_CLOTHING = 2;
  PRODUCT_CATEGORY_BOOKS = 3;
  PRODUCT_CATEGORY_HOME = 4;
  PRODUCT_CATEGORY_SPORTS = 5;
}

// CreateProductRequest represents a request to create a new product
message CreateProductRequest {
  string name = 1;
  string description = 2;
  int64 price_cents = 3;
  bool in_stock = 4;
  ProductCategory category = 5;
}

// CreateProductResponse represents a response after creating a product
message CreateProductResponse {
  Product product = 1;
  bool success = 2;
  string message = 3;
}

// GetProductRequest represents a request to retrieve a product
message GetProductRequest {
  string id = 1;
}

// GetProductResponse represents a response when getting a product
message GetProductResponse {
  Product product = 1;
  bool found = 2;
}

// ProductService defines basic product operations
service ProductService {
  // CreateProduct creates a new product
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
  
  // GetProduct retrieves a product by ID
  rpc GetProduct(GetProductRequest) returns (GetProductResponse);
}